<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lego.Api</name>
    </assembly>
    <members>
        <member name="T:Lego.Api.Controllers.PiecesController">
            <summary>
            API Controller of Lego pieces
            </summary>
        </member>
        <member name="M:Lego.Api.Controllers.PiecesController.#ctor(Microsoft.Extensions.Logging.ILogger{Lego.Api.Controllers.SeriesController},Lego.Api.Services.ILegoRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="legoRepository"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Lego.Api.Controllers.PiecesController.GetPieces(System.String,System.Int32,System.Int32)">
            <summary>
            Get all Lego pieces
            </summary>
            <param name="searchQuery">Search Lego pieces by piece number, color or description</param>
            <param name="pageNumber">The page to return</param>
            <param name="pageSize">Number of pieces to return</param>
            <returns>A list of Lego pieces</returns>
        </member>
        <member name="M:Lego.Api.Controllers.PiecesController.GetPiece(System.Int32)">
            <summary>
            Get a Lego piece by id
            </summary>
            <param name="pieceId">The id of the piece to get</param>
            <returns>A Lego piece</returns>
        </member>
        <member name="M:Lego.Api.Controllers.PiecesController.CreatePiece(Lego.Api.Models.PieceForCreationDto)">
            <summary>
            Create a new Lego piece
            </summary>
            <param name="piece">The piece for creation</param>
            <returns>The newly created piece</returns>
        </member>
        <member name="M:Lego.Api.Controllers.PiecesController.UpdatePiece(System.Int32,Lego.Api.Models.PieceForUpdatingDto)">
            <summary>
            Update a Lego piece
            </summary>
            <param name="pieceId">The id of the piece to update</param>
            <param name="piece">The piece for updating</param>
            <returns>The updated piece</returns>
        </member>
        <member name="M:Lego.Api.Controllers.PiecesController.DeletePiece(System.Int32)">
            <summary>
            Delete a Lego piece
            </summary>
            <param name="pieceId">The id of the piece for deletion</param>
            <returns>No content</returns>
        </member>
        <member name="T:Lego.Api.Controllers.SeriesController">
            <summary>
            API Controller of Lego series
            </summary>
        </member>
        <member name="M:Lego.Api.Controllers.SeriesController.#ctor(Microsoft.Extensions.Logging.ILogger{Lego.Api.Controllers.SeriesController},Lego.Api.Services.ILegoRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="legoRepository"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Lego.Api.Controllers.SeriesController.GetSeries(System.String,System.Int32,System.Int32)">
            <summary>
            Get all Lego series
            </summary>
            <param name="searchQuery">Search Lego series by name or description</param>
            <param name="pageNumber">The page to return</param>
            <param name="pageSize">The number of series to return</param>
            <returns>A list of Lego series</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SeriesController.GetSeriesById(System.Int32)">
            <summary>
            Get a Lego series by id
            </summary>
            <param name="seriesId">The id of the series to get</param>
            <returns>A Lego series</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SeriesController.CreateSeries(Lego.Api.Models.SeriesForCreationDto)">
            <summary>
            Create a new Lego series
            </summary>
            <param name="series">The series for creation</param>
            <returns>The newly created series</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SeriesController.UpdateSeries(System.Int32,Lego.Api.Models.SeriesForUpdatingDto)">
            <summary>
            Update a Lego series
            </summary>
            <param name="seriesId">The id of the series to update</param>
            <param name="series">The series for updating</param>
            <returns>The updated series</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SeriesController.DeleteSeries(System.Int32)">
            <summary>
            Delete a Lego series
            </summary>
            <param name="seriesId">The id of the series for deletion</param>
            <returns>No content</returns>
        </member>
        <member name="T:Lego.Api.Controllers.SetPiecesController">
            <summary>
            API Controller of set pieces
            </summary>
        </member>
        <member name="M:Lego.Api.Controllers.SetPiecesController.#ctor(Microsoft.Extensions.Logging.ILogger{Lego.Api.Controllers.SetPiecesController},Lego.Api.Services.ILegoRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="legoRepository"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Lego.Api.Controllers.SetPiecesController.GetMissingPiecesForSet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get all missing pieces of a set
            </summary>
            <param name="setId">The id of the set to fetch the missing pieces fr√≥m</param>
            <param name="pageNumber">The page to return</param>
            <param name="pageSize">Number of sets to return</param>
            <returns>A list of missing pieces of a set</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SetPiecesController.CreateMissingPiece(System.Int32,Lego.Api.Models.SetPieceForCreationDto)">
            <summary>
            Create a new missing piece of a specific Lego set 
            </summary>
            <param name="setId">The id of the set has a missing piece</param>
            <param name="setPiece">The missing piece to add</param>
            <returns></returns>
        </member>
        <member name="T:Lego.Api.Controllers.SetsController">
            <summary>
            API Controller of Lego sets
            </summary>
        </member>
        <member name="M:Lego.Api.Controllers.SetsController.#ctor(Microsoft.Extensions.Logging.ILogger{Lego.Api.Controllers.SetsController},Lego.Api.Services.ILegoRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="legoRepository"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Lego.Api.Controllers.SetsController.GetSets(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Int32,System.Int32)">
            <summary>
            Get all Lego sets
            </summary>
            <param name="themeId">Filter Lego sets by a known theme</param>
            <param name="seriesId">Filter Lego sets by a known series</param>
            <param name="searchQuery">Search Lego sets by model number, name, description. theme name or series name</param>
            <param name="pageNumber">The page to return</param>
            <param name="pageSize">Number of sets to return</param>
            <returns>A list of sets</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SetsController.GetSet(System.Int32)">
            <summary>
            Get a Lego set by id
            </summary>
            <param name="setId">The id of the set to get</param>
            <returns>A set</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SetsController.CreateSet(Lego.Api.Models.SetForCreationDto)">
            <summary>
            Create a new Lego set
            </summary>
            <param name="set">The set for creation</param>
            <returns>The newly created set</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SetsController.UpdateSet(System.Int32,Lego.Api.Models.SetForUpdatingDto)">
            <summary>
            Update a Lego set
            </summary>
            <param name="setId">The id of the set to update</param>
            <param name="set">The set for updating</param>
            <returns>The updated set</returns>
        </member>
        <member name="M:Lego.Api.Controllers.SetsController.DeleteSet(System.Int32)">
            <summary>
            Delete a Lego set
            </summary>
            <param name="setId">The id of the set for deletion</param>
            <returns>No content</returns>
        </member>
        <member name="T:Lego.Api.Controllers.ThemesController">
            <summary>
            API Controller of Lego themes
            </summary>
        </member>
        <member name="M:Lego.Api.Controllers.ThemesController.#ctor(Microsoft.Extensions.Logging.ILogger{Lego.Api.Controllers.ThemesController},Lego.Api.Services.ILegoRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="legoRepository"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Lego.Api.Controllers.ThemesController.GetThemes(System.String,System.Int32,System.Int32)">
            <summary>
            Get all Lego themes
            </summary>
            <param name="searchQuery">Search Lego themes by name or description</param>
            <param name="pageNumber">The page to return</param>
            <param name="pageSize">Number of themes to return</param>
            <returns>A list of Lego themes</returns>
        </member>
        <member name="M:Lego.Api.Controllers.ThemesController.GetTheme(System.Int32)">
            <summary>
            Get a Lego theme by id
            </summary>
            <param name="themeId">The id of the theme to get</param>
            <returns>A Lego theme</returns>
        </member>
        <member name="M:Lego.Api.Controllers.ThemesController.CreateTheme(Lego.Api.Models.ThemeForCreationDto)">
            <summary>
            Create a new Lego theme
            </summary>
            <param name="theme">The theme for creation</param>
            <returns>The newly created theme</returns>
        </member>
        <member name="M:Lego.Api.Controllers.ThemesController.UpdateTheme(System.Int32,Lego.Api.Models.ThemeForUpdatingDto)">
            <summary>
            Update a Lego theme
            </summary>
            <param name="themeId">The id of the theme to update</param>
            <param name="theme">The theme for updating</param>
            <returns>The updated theme</returns>
        </member>
        <member name="M:Lego.Api.Controllers.ThemesController.DeleteTheme(System.Int32)">
            <summary>
            Delete a Lego theme
            </summary>
            <param name="themeId">The id of the theme for deletion</param>
            <returns>No content</returns>
        </member>
        <member name="T:Lego.Api.LegosDataStore">
            <summary>
            Temporary data store 
            </summary>
        </member>
        <member name="P:Lego.Api.LegosDataStore.Sets">
            <summary>
            List of Lego sets
            </summary>
        </member>
        <member name="P:Lego.Api.LegosDataStore.Pieces">
            <summary>
            List of Lego parts
            </summary>
        </member>
        <member name="P:Lego.Api.LegosDataStore.Themes">
            <summary>
            List of themes
            </summary>
        </member>
        <member name="P:Lego.Api.LegosDataStore.Collections">
            <summary>
            List of collections
            </summary>
        </member>
        <member name="M:Lego.Api.LegosDataStore.#ctor">
            <summary>
            Temporary data store constructor
            </summary>
        </member>
        <member name="T:Lego.Api.Migrations.LegosDBInitialMigration">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.LegosDBInitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.LegosDBInitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.LegosDBInitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.PartModelNoToPartNo">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.PartModelNoToPartNo.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.PartModelNoToPartNo.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.PartModelNoToPartNo.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.AddFKToPartEntity">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.AddFKToPartEntity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.AddFKToPartEntity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.AddFKToPartEntity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.SeedData">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.SeedData.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.SeedData.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.SeedData.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.SetsMissingPartsAdded">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.SetsMissingPartsAdded.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.SetsMissingPartsAdded.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.SetsMissingPartsAdded.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.UpdatedCollectionToSeries">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.UpdatedCollectionToSeries.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.UpdatedCollectionToSeries.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.UpdatedCollectionToSeries.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.PartRenamedToPiece">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.PartRenamedToPiece.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.PartRenamedToPiece.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.PartRenamedToPiece.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.AddPendingChangesToContextModel">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.AddPendingChangesToContextModel.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.AddPendingChangesToContextModel.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.AddPendingChangesToContextModel.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Migrations.CreateEntityFromSetPiece">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.CreateEntityFromSetPiece.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.CreateEntityFromSetPiece.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lego.Api.Migrations.CreateEntityFromSetPiece.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Lego.Api.Models.PieceDto">
            <summary>
            A Lego piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceDto.Id">
            <summary>
            The id of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceDto.PieceNo">
            <summary>
            The part number of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceDto.Color">
            <summary>
            The color of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceDto.Description">
            <summary>
            The description of the piece
            </summary>
        </member>
        <member name="T:Lego.Api.Models.PieceForCreationDto">
            <summary>
            A Lego piece for creation
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceForCreationDto.PieceNo">
            <summary>
            The piece number of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceForCreationDto.Color">
            <summary>
            The color of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceForCreationDto.Description">
            <summary>
            The description of the piece
            </summary>
        </member>
        <member name="T:Lego.Api.Models.PieceForUpdatingDto">
            <summary>
            A Lego piece for updating
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceForUpdatingDto.PieceNo">
            <summary>
            The piece number of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceForUpdatingDto.Color">
            <summary>
            The color of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.PieceForUpdatingDto.Description">
            <summary>
            The description of the piece
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SeriesDto">
            <summary>
            A series of Lego sets under a specific theme
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesDto.Id">
            <summary>
            The id of the series
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesDto.Name">
            <summary>
            The name of the series
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesDto.Description">
            <summary>
            The description of the series
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SeriesForCreationDto">
            <summary>
            A Lego series for creation
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesForCreationDto.Name">
            <summary>
            The name of the series
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesForCreationDto.Description">
            <summary>
            The description of the series
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SeriesForUpdatingDto">
            <summary>
            A Lego series for updating
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesForUpdatingDto.Name">
            <summary>
            The name of the series
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SeriesForUpdatingDto.Description">
            <summary>
            The description of the series
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SetDto">
            <summary>
            A Lego set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.Id">
            <summary>
            The id of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.ModelNo">
            <summary>
            The model number of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.Name">
            <summary>
            The name of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.Theme">
            <summary>
            The theme of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.Series">
            <summary>
            The collection of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.NoOfPieces">
            <summary>
            The number of pieces included in the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.Description">
            <summary>
            The description of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.IsSealed">
            <summary>
            If the set is sealed
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.HasBox">
            <summary>
            If the set still has it's box
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.HasMissingPieces">
            <summary>
            If the set has missing pieces
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetDto.MissingPieces">
            <summary>
            A list of the missing pieces
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SetForCreationDto">
            <summary>
            A Lego set for creation
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.ModelNo">
            <summary>
            The model number of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.Name">
            <summary>
            The name of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.ThemeId">
            <summary>
            The theme id of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.SeriesId">
            <summary>
            The collection id of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.NoOfPieces">
            <summary>
            The number of pieces included in the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.Description">
            <summary>
            The description of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.IsSealed">
            <summary>
            If the set is sealed
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForCreationDto.HasBox">
            <summary>
            If the set still has it's box
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SetForUpdatingDto">
            <summary>
            A Lego set for updating
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.ModelNo">
            <summary>
            The model number of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.Name">
            <summary>
            The name of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.ThemeId">
            <summary>
            The theme id of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.SeriesId">
            <summary>
            The collection id of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.NoOfPieces">
            <summary>
            The number of pieces included in the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.Description">
            <summary>
            The description of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.IsSealed">
            <summary>
            If the set is sealed
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetForUpdatingDto.HasBox">
            <summary>
            If the set still has it's box
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SetPieceDto">
            <summary>
            A piece of a Lego set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetPieceDto.PieceId">
            <summary>
            The id of the piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetPieceDto.Quantity">
            <summary>
            The quantity of this type of piece
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SetPieceWithPieceDto">
            <summary>
            A piece of a Lego set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetPieceWithPieceDto.Quantity">
            <summary>
            The number of this type of piece
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetPieceWithPieceDto.Piece">
            <summary>
            The piece
            </summary>
        </member>
        <member name="T:Lego.Api.Models.SetWithMissingPiecesDto">
            <summary>
            A Lego set with a list of missing pieces
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.Id">
            <summary>
            The id of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.ModelNo">
            <summary>
            The model number of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.Name">
            <summary>
            The name of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.Theme">
            <summary>
            The theme of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.Series">
            <summary>
            The collection of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.NoOfPieces">
            <summary>
            The number of pieces included in the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.Description">
            <summary>
            The description of the set
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.IsSealed">
            <summary>
            If the set is sealed
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.HasBox">
            <summary>
            If the set still has it's box
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.NoOfMissingPieces">
            <summary>
            The number of missing pieces
            </summary>
        </member>
        <member name="P:Lego.Api.Models.SetWithMissingPiecesDto.MissingPieces">
            <summary>
            A list of the missing pieces
            </summary>
        </member>
        <member name="T:Lego.Api.Models.ThemeDto">
            <summary>
            A specific theme of Lego sets 
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeDto.Id">
            <summary>
            The id of the theme
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeDto.Name">
            <summary>
            The name of the theme
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeDto.Description">
            <summary>
            The description of the theme
            </summary>
        </member>
        <member name="T:Lego.Api.Models.ThemeForCreationDto">
            <summary>
            A Lego theme for creation
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeForCreationDto.Name">
            <summary>
            The name of the theme
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeForCreationDto.Description">
            <summary>
            The description of the theme
            </summary>
        </member>
        <member name="T:Lego.Api.Models.ThemeForUpdatingDto">
            <summary>
            A Lego theme for updating
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeForUpdatingDto.Name">
            <summary>
            The name of the theme
            </summary>
        </member>
        <member name="P:Lego.Api.Models.ThemeForUpdatingDto.Description">
            <summary>
            The description of the theme
            </summary>
        </member>
    </members>
</doc>
